<Window x:Class="ViewLayer.ProductView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:validators="clr-namespace:ViewLayer.Validators"
        xmlns:conv="clr-namespace:ViewLayer.Converters"
        mc:Ignorable="d"
        Title="ProductView" Width="500" ResizeMode="NoResize">
    <Window.Resources>
        <Style x:Key="DefaultTextBoxStyle" TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="DisplayErrorMessage" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}">
            <Setter Property="Height" Value="20" />
            <Setter Property="Margin" Value="0, 0, 0, 10" />
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel>
                            <AdornedElementPlaceholder x:Name="placeholder" />
                            <TextBlock FontSize="11" FontStyle="Italic" Foreground="Red"
                                       Text="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>

        <Label Grid.Column="1" Grid.Row="0" Content="Product name:" FontSize="10"/>
        <TextBox Grid.Column="2" Grid.Row="0" Name="ProductName" TextWrapping="Wrap" Style="{StaticResource DisplayErrorMessage}">
            <TextBox.Text>
                <Binding Path="ProductName" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validators:ValidateProductName ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <Label Grid.Column="1" Grid.Row="1" Content="Make flag:" FontSize="10"/>
        <ComboBox Grid.Column="2" Grid.Row="1" ItemsSource="{Binding Flags}" SelectedItem="{Binding MakeFlag}" SelectedIndex="0"/>

        <Label Grid.Column="1" Grid.Row="2" Content="Finished Goods Flag:" FontSize="10"/>
        <ComboBox Grid.Column="2" Grid.Row="2" ItemsSource="{Binding Flags}" SelectedItem="{Binding FinishedGoodsFlag}" SelectedIndex="0"/>

        <Label Grid.Column="1" Grid.Row="3" Content="Product number:" FontSize="10"/>
        <TextBox Grid.Column="2" Grid.Row="3" Name="ProductNumber" TextWrapping="Wrap" Style="{StaticResource DisplayErrorMessage}" >
            <TextBox.Text>
                <Binding Path="ProductNumber" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validators:ValidaterProductNumber ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <Label Grid.Column="1" Grid.Row="4" Content="Color:" FontSize="10"/>
        <ComboBox Grid.Column="2" Grid.Row="4" ItemsSource="{Binding Colors}" SelectedItem="{Binding Color}" SelectedIndex="0"/>

        <Label Grid.Column="1" Grid.Row="5" Content="Safety stock level:" FontSize="10"/>
        <TextBox Grid.Column="2" Grid.Row="5" Name="SafetyStockLevel" TextWrapping="Wrap" Style="{StaticResource DisplayErrorMessage}" >
            <TextBox.Text>
                <Binding Path="SafetyStockLevel" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validators:ValidateIntegerHigher ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <Label Grid.Column="1" Grid.Row="6" Content="Standard cost:" FontSize="10"/>
        <TextBox Grid.Column="2" Grid.Row="6" Name="StandardCost" TextWrapping="Wrap" Style="{StaticResource DisplayErrorMessage}" >
            <TextBox.Text>
                <Binding Path="ReorderPoint" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validators:ValidateRealNumberEqualHigher ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>


        <Label Grid.Column="1" Grid.Row="7" Content="Reorder point:" FontSize="10"/>
        <TextBox Grid.Column="2" Grid.Row="7" Name="ReorderPoint" TextWrapping="Wrap" Style="{StaticResource DisplayErrorMessage}" >
            <TextBox.Text>
                <Binding Path="StandardCost" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validators:ValidateIntegerHigher ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <Label Grid.Column="1" Grid.Row="8" Content="List price:" FontSize="10"/>
        <TextBox Grid.Column="2" Grid.Row="8" Name="ListPrice" TextWrapping="Wrap" Style="{StaticResource DisplayErrorMessage}" >
            <TextBox.Text>
                <Binding Path="ListPrice" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validators:ValidateRealNumberEqualHigher ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <Label Grid.Column="1" Grid.Row="9" Content="Size:" FontSize="10"/>
        <ComboBox Grid.Column="2" Grid.Row="9" ItemsSource="{Binding Sizes}"  SelectedItem="{Binding Size}" SelectedIndex="0"/>

        <Label Grid.Column="1" Grid.Row="10" Content="Size unit measure code:" FontSize="10"/>
        <ComboBox Grid.Column="2" Grid.Row="10" ItemsSource="{Binding SizesUnits}"  SelectedItem="{Binding SizeUnitMeasureCode}" SelectedIndex="0"/>

        <Label Grid.Column="1" Grid.Row="11" Content="Weight unit measure code:" FontSize="10"/>
        <ComboBox Grid.Column="2" Grid.Row="11" ItemsSource="{Binding WeightUnits}"  SelectedItem="{Binding WeightUnitMeasureCode}" SelectedIndex="0"/>

        <Label Grid.Column="1" Grid.Row="12" Content="Weight:" FontSize="10"/>
        <TextBox Grid.Column="2" Grid.Row="12" Name="Weight" TextWrapping="Wrap" Style="{StaticResource DisplayErrorMessage}" >
            <TextBox.Text>
                <Binding Path="Weight" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validators:ValidateRealHigher ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text> 
        </TextBox>

        <Label Grid.Column="1" Grid.Row="13" Content="Days to manufacture:" FontSize="10"/>
        <TextBox Grid.Column="2" Grid.Row="13" Name="DaysToManufacture" TextWrapping="Wrap" Style="{StaticResource DisplayErrorMessage}" >
            <TextBox.Text>
                <Binding Path="DaysToManufacture" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validators:ValidateDays ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <Label Grid.Column="1" Grid.Row="14" Content="Product line:" FontSize="10"/>
        <ComboBox Grid.Column="2" Grid.Row="14" ItemsSource="{Binding ProductLines}"  SelectedItem="{Binding ProductLine}" SelectedIndex="0"/>

        <Label Grid.Column="1" Grid.Row="15" Content="Class:" FontSize="10"/>
        <ComboBox Grid.Column="2" Grid.Row="15" ItemsSource="{Binding Classes}"  SelectedItem="{Binding Class}" SelectedIndex="0"/>

        <Label Grid.Column="1" Grid.Row="16" Content="Style:" FontSize="10"/>
        <ComboBox Grid.Column="2" Grid.Row="16" ItemsSource="{Binding Styles}"  SelectedItem="{Binding Style}" SelectedIndex="0"/>

        <Label Grid.Column="1" Grid.Row="17" Content="Product subcategory:" FontSize="10"/>
        <ComboBox Grid.Column="2" Grid.Row="17" ItemsSource="{Binding ProductSubCategories}"  SelectedItem="{Binding ProductSubcategoryID}" SelectedIndex="0"/>

        <Label Grid.Column="1" Grid.Row="18" Content="Product model:" FontSize="10"/>
        <ComboBox Grid.Column="2" Grid.Row="18" ItemsSource="{Binding ModelIds}"  SelectedItem="{Binding ModelId}" SelectedIndex="0"/>

        <Label Grid.Column="1" Grid.Row="19" Content="Sell start date:" FontSize="10"/>
        <DatePicker Grid.Column="2" Grid.Row="19" SelectedDate="{Binding SellStartDate}"/>

        <Label Grid.Column="1" Grid.Row="20" Content="Sell end date:" FontSize="10"/>
        <DatePicker Grid.Column="2" Grid.Row="20" SelectedDate="{Binding SellEndDate}"/>

        <StackPanel Grid.Column="1" Grid.Row="22" Orientation="Horizontal">
            <Button Content="Confirm" Command="{Binding AddItemToDataBase}" Height="23" Width="124" Margin="0,0,0,-1">
                <Button.Resources>
                    <conv:IsEmptyConverter x:Key="isEmptyConverter"/>
                </Button.Resources>
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=ProductName, Path=Text, Converter={StaticResource isEmptyConverter}}" Value="True"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=ProductName}" Value="False"/>

                                    <Condition Binding="{Binding ElementName=ProductNumber, Path=Text, Converter={StaticResource isEmptyConverter}}" Value="True"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=ProductNumber}" Value="False"/>

                                    <Condition Binding="{Binding ElementName=SafetyStockLevel, Path=Text, Converter={StaticResource isEmptyConverter}}" Value="True"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=SafetyStockLevel}" Value="False"/>

                                    <Condition Binding="{Binding ElementName=StandardCost, Path=Text, Converter={StaticResource isEmptyConverter}}" Value="True"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=StandardCost}" Value="False"/>

                                    <Condition Binding="{Binding ElementName=ReorderPoint, Path=Text, Converter={StaticResource isEmptyConverter}}" Value="True"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=ReorderPoint}" Value="False"/>

                                    <Condition Binding="{Binding ElementName=ListPrice, Path=Text, Converter={StaticResource isEmptyConverter}}" Value="True"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=ListPrice}" Value="False"/>

                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Weight}" Value="False"/>

                                    <Condition Binding="{Binding ElementName=DaysToManufacture, Path=Text, Converter={StaticResource isEmptyConverter}}" Value="True"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=DaysToManufacture}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
    </Grid>
</Window>
